{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "AHP API Specification"
  },
  "host": "secure.animalhealthplan.com",
  "basePath": "/test/api",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/clinic/userClinic": {
      "get": {
        "tags": [
          "Clinic"
        ],
        "summary": "Get User Clinic(s) Detail.",
        "description": "Gets `Clinic` object. If you supply the modified date you will get user clinic details if modified on or after this date.  IF no date is specified then all details will be returned. Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "User Clinic(s) Details",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Clinic"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/report/taskByMonth": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Requests task by month PDF report email",
        "description": "Requests the specified Calendar PDFs be created by the server and sent to the specified recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "request",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskByMonthReport"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Received Requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskByMonthReport"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/report/complianceReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Requests a compliance report for the given time period",
        "description": "Requests the specified compliance report PDFs be generated by the  webserver and then sent out to the specified recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "request",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComplianceReport"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Received Requests",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComplianceReport"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/farm/allUserFarms": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Get the farms for the user as UserFarm objects - just the farms they have access to",
        "description": "Gets all of the 'UserFarm' objects that the current user has access to m",
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array Of UserFarms",
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserFarm"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/farm/userClinicFarms": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Get the farms for the clinics of the user",
        "description": "Gets all of the 'Farm' objects that are connected with the clinics of the user ID passed as a parameter",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array Of Farms",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Farm"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/farm/userFarms": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Get the farms for the user",
        "description": "Gets all of the 'Farm' objects that have the current user listed as a contact for the farm",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array Of Farms",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Farm"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/healthissue": {
      "get": {
        "tags": [
          "Health Issues"
        ],
        "summary": "Get All Health Issues.",
        "description": "Gets all `HealthIssue` objects. You must supply modified date and will get health issues modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "HealthIssues modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of HealthIssues",
              "type": "array",
              "items": {
                "$ref": "#/definitions/HealthIssue"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/upload/newplan": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "Takes in a new plan from the device and inserts it into the database on the web. If a new batch image is added the newImage flag must be set.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "plan",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Inserted Plan",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/upload/update": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "Takes in a modified plan from the device and updates the version on the web. If a new batch image is added the newImage flag must be set.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "plan",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Updated Plan",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/vet/download": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Finds the plans that the current vet user has access to.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Plans modified on or after this date.  Must be in the format yyyy-MM-dd",
            "type": "string",
            "format": "datetime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "user plans",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/vet/plans": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Finds the plans that the current vet user has access to. Returns plan info only, no task or other related information is returned.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Plans modified on or after this date.  Must be in the format yyyy-MM-dd",
            "type": "string",
            "format": "datetime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "user plans",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/farm/plans": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Finds the plans that the current farm user has access to. Returns plan info only, no task or other related information is returned.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Plans modified on or after this date.  Must be in the format yyyy-MM-dd",
            "type": "string",
            "format": "datetime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "user plans",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/detail": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Gets the plans detail. All information linked to the plan like tasks, reminders and compliance.",
        "parameters": [
          {
            "name": "planId",
            "in": "query",
            "description": "PlanId for which information is needed.",
            "type": "integer",
            "format": "integer",
            "required": true
          },
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Tasks and related information modified on or after this date.  Must be in the format yyyy-MM-dd",
            "type": "string",
            "format": "datetime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "plan detail",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlanTask"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/plan/farm/download": {
      "get": {
        "tags": [
          "Plan"
        ],
        "summary": "Finds the plans that the current farm user has access to.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Plans modified on or after this date.  Must be in the format yyyy-MM-dd",
            "type": "string",
            "format": "datetime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "user plans",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/planTask/complete": {
      "post": {
        "tags": [
          "Plan"
        ],
        "summary": "Changes the status of the task between complete and active",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "title": "Completion Model",
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompletionModel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "success",
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Products.",
        "description": "Gets all `Product` objects. You must supply modified date and will get products modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Products modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of Products",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/productCategory/get": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Product Categories.",
        "description": "Gets all `ProductCategory` objects. You must supply modified date and will get Product Categories modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Product Categories modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of Product Categories",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductCategory"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/product/species/download": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Gets all of the different product information for speices",
        "description": "Gets all of the `ProuctSpeices` information",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Products modified on or after this date. Must be in the format yyyy-mm-dd",
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Array of ProductSpecies",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductSpecies"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/role/all": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get All Roles.",
        "description": "Gets all `Roles` objects. You must supply modified date and will get roles modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Roles modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of Roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/role/user": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get All User Roles.",
        "description": "Gets all `Roles` objects. You must supply userId (int) date and will get all that users roles.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The ID of the user",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of Roles",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Gets all of the different status codes that objects can have",
        "description": "Gets all of the status codes that can be given to the different objects",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Array of Status codes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Status"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/stockclass": {
      "get": {
        "tags": [
          "Stock Class"
        ],
        "summary": "Get All Stock Classes.",
        "description": "Gets all `StockClass` objects. You must supply modified date and will get stock classes modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "StockClasses modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of StockClasses",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockClass"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/stocktype": {
      "get": {
        "tags": [
          "Stock Types"
        ],
        "summary": "Get All Stock Types.",
        "description": "Gets all `StockType` objects. You must supply modified date and will get stock types modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "StockTypes modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of StockTypes",
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockType"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/taskcategory": {
      "get": {
        "tags": [
          "Task Categories"
        ],
        "summary": "Get All Task Categories.",
        "description": "Gets all `TaskCategory` objects. You must supply modified date and will get task categories modified on or after this date.  Object properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "TaskCategory's modified on or after this date. Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Array Of TaskCategories",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskCategory"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/template": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Gets the templates,",
        "description": "Gets the templates currently active. You must login via Identity Server to use this method.  The properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array Of Templates,",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Template"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/template/tasks": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Gets all the Template Tasks.",
        "description": "Gets all of the template tasks.  You must login via Identity Server to use this method.  The properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array Of Template Tasks",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateTask"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/template/tasks/reminder": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Gets all of the reminders for the tasks in the templates.",
        "description": "Gets all of the reminders for the template tasks.  You must login via Identidy Server to use this method.  The properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": true,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Array of Template Task Reminders",
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateTaskReminder"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/template/full": {
      "get": {
        "tags": [
          "Template"
        ],
        "summary": "Gets the full templates contaning both the task and reminders in one object with clinic customisations",
        "description": "Gets the full templates that are currently active.  These full templates contain their templateTasks and templateReminders in one API call rather then needing 3 calls to download the parts of the templates.  You must login via Identity Server to use this method.  The properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Array of Templates",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Template"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/user/getLoggedInUserId": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Logged In User ID.",
        "description": "Gets the logged in user's ID. You must just login via Identity Server and run the method.  The property will be returned in camelCase.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "User ID",
              "type": "integer"
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/user/usersForClinic": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the list of users for the clinic",
        "description": "Takes the passed clinicId and modifiedAfter date and returns a list of all of the users in the system that are associated with that clinic.  properties will be returned in camelCase.",
        "parameters": [
          {
            "name": "clinicId",
            "in": "query",
            "description": "The clinic ID in the system",
            "required": true,
            "type": "integer"
          },
          {
            "name": "modifiedAfter",
            "in": "query",
            "description": "Must be in the format yyyy-mm-dd",
            "required": false,
            "type": "string",
            "format": "dateTime"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Clinic User List",
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/user/userIsVet": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns if the user is a pratice user",
        "description": "Looks at the users roles to see if they are currently a pratice user.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "title": "Vet Status",
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/user/userIsFarmer": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Returns if the user is a farm user",
        "description": "Looks at the users roles to see if they are currenty a farm user.",
        "responses": {
          "200": {
            "description": "Successful responce",
            "schema": {
              "title": "Farmer Status",
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    },
    "/utility/checkConnection": {
      "get": {
        "tags": [
          "Utility"
        ],
        "summary": "Method to allow the device to check for a connection to the database",
        "description": "Returns if the device is able to access the database.  True on success call.  Phone can fill in false for other attempts",
        "responses": {
          "200": {
            "description": "successful responce",
            "schema": {
              "title": "Call Success",
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "ahp_auth": [
              "read",
              "write"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "ahp_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://secure.animalhealthplan.com/test/identity/core/connect/authorize",
      "flow": "implicit",
      "scopes": {
        "read": "read ahp objects",
        "write": "write ahp objects"
      }
    }
  },
  "definitions": {
    "Clinic": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "districtId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "road": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "town": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "vetsCanSeeAllFarms": {
          "type": "boolean"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "isActive": {
          "type": "boolean"
        },
        "imageData": {
          "type": "string",
          "format": "byte[]"
        },
        "imageMimeType": {
          "type": "string"
        }
      }
    },
    "CompletionModel": {
      "type": "object",
      "properties": {
        "taskID": {
          "type": "integer",
          "format": "int32"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "markAsCompleted": {
          "type": "boolean"
        },
        "productUsedID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ComplianceReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "farmId": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "DateTime"
        },
        "endDate": {
          "type": "string",
          "format": "DateTime"
        },
        "planIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "sendList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recipient"
          }
        }
      }
    },
    "Farm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "statusId": {
          "type": "integer",
          "format": "int32"
        },
        "districtId": {
          "type": "integer",
          "format": "int32"
        },
        "clinicId": {
          "type": "integer",
          "format": "int32"
        },
        "vetUserId": {
          "type": "integer",
          "format": "int32"
        },
        "mainContactUserId": {
          "type": "integer",
          "format": "int32"
        },
        "farmOnlineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "road": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "nearestTown": {
          "type": "string"
        },
        "rapidNo": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstPlanActivatedOn": {
          "type": "string",
          "format": "date-time"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FarmContact"
          }
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "stockTypesList": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "FarmContact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "farmId": {
          "type": "integer",
          "format": "int32"
        },
        "emailAddress": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "int32"
        },
        "contactNumber": {
          "type": "string"
        },
        "mainContact": {
          "type": "boolean"
        },
        "trustedFarmer": {
          "type": "boolean"
        },
        "reminderTypes": {
          "type": "integer",
          "format": "int32"
        },
        "categoryTypes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HealthIssue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "stockTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Plan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "stockTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "stockClassID": {
          "type": "integer",
          "format": "int32"
        },
        "farmID": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "startYear": {
          "type": "integer",
          "format": "int32"
        },
        "isFarmerPlan": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "subgroup": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "clinicID": {
          "type": "integer",
          "format": "int32"
        },
        "statusID": {
          "type": "integer",
          "format": "int32"
        },
        "speciesID": {
          "type": "integer",
          "format": "int32"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanTask"
          }
        },
        "externalID": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfAnimals": {
          "type": "integer",
          "format": "int32"
        },
        "dateAnimalsCounted": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PlanTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "parentTaskName": {
          "type": "string"
        },
        "parentID": {
          "type": "integer",
          "format": "int32"
        },
        "healthIssueID": {
          "type": "integer",
          "format": "int32"
        },
        "productID": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "daysOffsetFromParent": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "planID": {
          "type": "integer",
          "format": "int32"
        },
        "taskCategoryID": {
          "type": "integer",
          "format": "int32"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "statusID": {
          "type": "integer",
          "format": "int32"
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanTaskReminder"
          }
        },
        "batchDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlanTaskCompliance"
          }
        },
        "modifiedDate": {
          "type": "string",
          "format": "dateTime"
        },
        "externalID": {
          "type": "integer",
          "format": "int32"
        },
        "productUsedID": {
          "type": "integer",
          "format": "int32"
        },
        "animalsID": {
          "type": "string"
        },
        "allAnimals": {
          "type": "boolean"
        },
        "autoCompleted": {
          "type": "boolean"
        },
		"noAnimalsTreated": {
		  "type": "integer",
		  "format": "int32"
		}
      }
    },
    "PlanTaskCompliance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "planTaskID": {
          "type": "integer",
          "format": "int32"
        },
        "statusID": {
          "type": "integer",
          "format": "int32"
        },
        "batchNumber": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "imageID": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "imageData": {
          "type": "string",
          "format": "byte[]"
        },
        "newImage": {
          "type": "boolean"
        }
      }
    },
    "PlanTaskReminder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "sendBeforeDays": {
          "type": "integer",
          "format": "int32"
        },
        "reminderTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "planTaskID": {
          "type": "integer",
          "format": "int32"
        },
        "statusID": {
          "type": "integer",
          "format": "int32"
        },
        "reminderDate": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "externalID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/ProductCategory"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "productCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "acvmCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "productImage": {
          "type": "string",
          "format": "byte"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "imageData": {
          "type": "string",
          "format": "byte[]"
        },
        "imageMimeType": {
          "type": "string"
        }
      }
    },
    "ProductCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductSpecies": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "productID": {
          "type": "integer"
        },
        "SpeciesID": {
          "type": "integer"
        },
        "DoesUnits": {
          "type": "string"
        },
        "Dose": {
          "type": "number",
          "format": "double"
        },
        "WithholdingDaysMeat": {
          "type": "integer"
        },
        "WithholdingDaysMilk": {
          "type": "string"
        }
      }
    },
    "Recipient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "RequestId": {
          "type": "integer",
          "format": "int32"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "forAllAreas": {
          "type": "boolean"
        },
        "forPlans": {
          "type": "boolean"
        },
        "forReminders": {
          "type": "boolean"
        },
        "forTasks": {
          "type": "boolean"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StockType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "speciesID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StockClass": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "stockTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TaskByMonthReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "farmId": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string",
          "format": "DateTime"
        },
        "monthCount": {
          "type": "integer",
          "format": "int32"
        },
        "planIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "sendList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recipient"
          }
        }
      }
    },
    "TaskCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Template": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "stockTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "stockClassID": {
          "type": "integer",
          "format": "int32"
        },
        "useNextYear": {
          "type": "boolean"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateTask"
          }
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TemplateTask": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "templateId": {
          "type": "integer",
          "format": "int32"
        },
        "parentTask": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taskCategory": {
          "type": "integer",
          "format": "int32"
        },
        "healthIssue": {
          "type": "integer",
          "format": "int32"
        },
        "product": {
          "type": "integer",
          "format": "int32"
        },
        "instruction": {
          "type": "string"
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateTaskReminder"
          }
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TemplateTaskReminder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "taskID": {
          "type": "integer",
          "format": "int32"
        },
        "statusID": {
          "type": "integer",
          "format": "int32"
        },
        "reminderTypeID": {
          "type": "integer",
          "format": "int32"
        },
        "daysBefore": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "roles": {
          "$ref": "#/definitions/Role"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "contactNumber": {
          "type": "string"
        },
        "eMailAddress": {
          "type": "string"
        },
        "mayEditTasks": {
          "type": "boolean"
        },
        "singleReminder": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserFarm": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "farmId": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "isMainFarmContact": {
          "type": "boolean"
        },
        "reminderTypes": {
          "type": "integer",
          "format": "int32"
        },
        "categoryTypes": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}